---
title: "정렬 - 삽입 정렬"
date: 2020-07-01 18:27:13 -0400
categories: sort
---

# 삽입정렬 (Insection Sort)  
자료 배열의 모든 요소를 앞에서부터 차례대로 이미 정렬된 배열 부분과 비교하여,  
자신의 위치를 찾아 삽입함으로써 정렬을 완성하는 방식이다.  

```
int[] arr = {5, 7, 2, 4, 1}
```
위 코드처럼 배열이 있을 때, (오름차순)  





# JAVA 코드 (Insection Sort)
```
public class Insertion_sort {
	// 삽입정렬은 아직 정렬되지 않은 임의의 데이터를 이미 정렬된 부분의 적절한 위치에 삽입해 가며 정렬하는 방식
	public int[] sort(int[] arr) {
		int temp;
		int j = 0;
		// arr[0]부터 정렬되어 있다고 생각!
		for(int i = 1; i < arr.length; i++) {		
			// arr[1]을 temp에 임시 저장
			temp = arr[i];							
			// j는 i의 위치에서(j = i-1) 한칸씩 내려가며(j--) 자신의 위치를 찾기 위함
			// j는 index위치이기 때문에 0보다 클때만 반복문이 돌아야 하고
			for(j = i-1; j >= 0 && temp < arr[j]; j--) {	
				// temp가 arr[j]보다 작을 때 위치를 바꿔주면 됨
															
				// temp가 arr[j]보다 작기 때문에 arr[j+1]에 arr[j]를 넣음
				arr[j+1] = arr[j];							
				// arr[1]이 arr[0]보다 작으면 arr[1]에 arr[0]을 넣음
			}												
			// 임시 저장된 temp값을 arr[j+1]에 넣음
			arr[j+1] = temp;					
		}
		
		
		return arr;
	}
	
	public static void main(String[] args) {
		int[] arr = {5, 3, 4, 2, 1, 7, 12, 1341,1561, 15};
		Insertion_sort is = new Insertion_sort();
		
		is.sort(arr);
		for(int i = 0; i < arr.length; i++) {
			System.out.println(arr[i]);
		}
	}
}
```

