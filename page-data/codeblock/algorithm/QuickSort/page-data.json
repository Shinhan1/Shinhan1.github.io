{"componentChunkName":"component---src-templates-docs-js","path":"/codeblock/algorithm/QuickSort","result":{"data":{"site":{"siteMetadata":{"title":"Gatsby Gitbook Boilerplate | Hasura","docsLocation":"https://github.com/Sn-Hn"}},"mdx":{"fields":{"id":"486b56a5-f884-595f-bcb9-5e753c6bddf7","title":"정렬 - 퀵 정렬","slug":"/codeblock/algorithm/QuickSort"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"정렬 - 퀵 정렬\",\n  \"date\": \"2020-07-03 16:07:44 -0400\",\n  \"categories\": \"sort\",\n  \"metaTitle\": \"Sn-Hn (퀵 정렬)\",\n  \"metaDescription\": \"This is the meta description for this page\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"\\uD035 \\uC815\\uB82C (Quick Sort)\"), mdx(\"p\", null, \"\\uD035 \\uC815\\uB82C(Quicksort)\\uC740 \\uCC30\\uC2A4 \\uC564\\uD130\\uB2C8 \\uB9AC\\uCC98\\uB4DC \\uD638\\uC5B4\\uAC00 \\uAC1C\\uBC1C\\uD55C \\uC815\\uB82C \\uC54C\\uACE0\\uB9AC\\uC998\\uC774\\uB2E4.\\n\\uB2E4\\uB978 \\uC6D0\\uC18C\\uC640\\uC758 \\uBE44\\uAD50\\uB9CC\\uC73C\\uB85C \\uC815\\uB82C\\uC744 \\uC218\\uD589\\uD558\\uB294 \\uBE44\\uAD50 \\uC815\\uB82C\\uC5D0 \\uC18D\\uD55C\\uB2E4.\\n\\uD035 \\uC815\\uB82C\\uC740 n\\uAC1C\\uC758 \\uB370\\uC774\\uD130\\uB97C \\uC815\\uB82C\\uD560 \\uB54C, \\uCD5C\\uC545\\uC758 \\uACBD\\uC6B0\\uC5D0\\uB294 O(n2)\\uBC88\\uC758 \\uBE44\\uAD50\\uB97C \\uC218\\uD589\\uD558\\uACE0, \\uD3C9\\uADE0\\uC801\\uC73C\\uB85C O(n log n)\\uBC88\\uC758 \\uBE44\\uAD50\\uB97C \\uC218\\uD589\\uD55C\\uB2E4.\"), mdx(\"p\", null, \"\\uD035 \\uC815\\uB82C\\uC740 \\uBD84\\uD560 \\uC815\\uBCF5(divide and conquer) \\uBC29\\uBC95\\uC744 \\uD1B5\\uD574 \\uB9AC\\uC2A4\\uD2B8\\uB97C \\uC815\\uB82C\\uD55C\\uB2E4.\"), mdx(\"p\", null, \"\\uB9AC\\uC2A4\\uD2B8 \\uAC00\\uC6B4\\uB370\\uC11C \\uD558\\uB098\\uC758 \\uC6D0\\uC18C\\uB97C \\uACE0\\uB978\\uB2E4. \\uC774\\uB807\\uAC8C \\uACE0\\uB978 \\uC6D0\\uC18C\\uB97C \\uD53C\\uBC97\\uC774\\uB77C\\uACE0 \\uD55C\\uB2E4.\\n\\uD53C\\uBC97 \\uC55E\\uC5D0\\uB294 \\uD53C\\uBC97\\uBCF4\\uB2E4 \\uAC12\\uC774 \\uC791\\uC740 \\uBAA8\\uB4E0 \\uC6D0\\uC18C\\uB4E4\\uC774 \\uC624\\uACE0,\\n\\uD53C\\uBC97 \\uB4A4\\uC5D0\\uB294 \\uD53C\\uBC97\\uBCF4\\uB2E4 \\uAC12\\uC774 \\uD070 \\uBAA8\\uB4E0 \\uC6D0\\uC18C\\uB4E4\\uC774 \\uC624\\uB3C4\\uB85D \\uD53C\\uBC97\\uC744 \\uAE30\\uC900\\uC73C\\uB85C \\uB9AC\\uC2A4\\uD2B8\\uB97C \\uB458\\uB85C \\uB098\\uB208\\uB2E4.\\n\\uC774\\uB807\\uAC8C \\uB9AC\\uC2A4\\uD2B8\\uB97C \\uB458\\uB85C \\uB098\\uB204\\uB294 \\uAC83\\uC744 \\uBD84\\uD560\\uC774\\uB77C\\uACE0 \\uD55C\\uB2E4. \\uBD84\\uD560\\uC744 \\uB9C8\\uCE5C \\uB4A4\\uC5D0 \\uD53C\\uBC97\\uC740 \\uB354 \\uC774\\uC0C1 \\uC6C0\\uC9C1\\uC774\\uC9C0 \\uC54A\\uB294\\uB2E4.\\n\\uBD84\\uD560\\uB41C \\uB450 \\uAC1C\\uC758 \\uC791\\uC740 \\uB9AC\\uC2A4\\uD2B8\\uC5D0 \\uB300\\uD574 \\uC7AC\\uADC0(Recursion)\\uC801\\uC73C\\uB85C \\uC774 \\uACFC\\uC815\\uC744 \\uBC18\\uBCF5\\uD55C\\uB2E4. \\uC7AC\\uADC0\\uB294 \\uB9AC\\uC2A4\\uD2B8\\uC758 \\uD06C\\uAE30\\uAC00 0\\uC774\\uB098 1\\uC774 \\uB420 \\uB54C\\uAE4C\\uC9C0 \\uBC18\\uBCF5\\uB41C\\uB2E4.\\n\\uC7AC\\uADC0 \\uD638\\uCD9C\\uC774 \\uD55C\\uBC88 \\uC9C4\\uD589\\uB420 \\uB54C\\uB9C8\\uB2E4 \\uCD5C\\uC18C\\uD55C \\uD558\\uB098\\uC758 \\uC6D0\\uC18C\\uB294 \\uCD5C\\uC885\\uC801\\uC73C\\uB85C \\uC704\\uCE58\\uAC00 \\uC815\\uD574\\uC9C0\\uBBC0\\uB85C, \\uC774 \\uC54C\\uACE0\\uB9AC\\uC998\\uC740 \\uBC18\\uB4DC\\uC2DC \\uB05D\\uB09C\\uB2E4\\uB294 \\uAC83\\uC744 \\uBCF4\\uC7A5\\uD560 \\uC218 \\uC788\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript\"\n  }, \"public class Quick_sort2 {\\n    public static int partition(int arr[], int left, int right) {\\n        // \\uC815\\uB82C\\uB418\\uC9C0 \\uC54A\\uC740 \\uBC30\\uC5F4 arr, \\uAC00\\uC7A5\\uC67C\\uCABD left, \\uAC00\\uC7A5 \\uC624\\uB978\\uCABD right\\n        int pivot = arr[(left + right) / 2];        // \\uC911\\uAC04 \\uC9C0\\uC810\\uC744 \\uC815\\uD574\\uC900\\uB2E4\\n        while (left < right) {      // left\\uAC00 right\\uBCF4\\uB2E4 \\uC791\\uC744 \\uB54C while\\uBB38 \\uC2E4\\uD589..\\n            // arr[left]\\uAC12\\uC774 \\uD53C\\uBD07\\uBCF4\\uB2E4 \\uC791\\uACE0, left\\uAC00 right\\uBCF4\\uB2E4 \\uC791\\uC73C\\uBA74(left\\uC640 right\\uAC00 \\uB9CC\\uB098\\uC9C0 \\uC54A\\uC558\\uB2E4\\uBA74)\\n            // left\\uB97C ++(\\uC624\\uB978\\uCABD\\uC73C\\uB85C \\uD55C\\uCE78)\\n            while ((arr[left] < pivot) && (left < right))\\n                left++;\\n            // arr[right]\\uAC12\\uC774 \\uD53C\\uBD07\\uBCF4\\uB2E4 \\uD06C\\uACE0, left\\uAC00 right\\uBCF4\\uB2E4 \\uC791\\uC73C\\uBA74(left\\uC640 right\\uAC00 \\uB9CC\\uB098\\uC9C0 \\uC54A\\uC558\\uB2E4\\uBA74)\\n            // right\\uB97C --(\\uC67C\\uCABD\\uC73C\\uB85C \\uD55C\\uCE78)\\n            while ((arr[right] > pivot) && (left < right))\\n                right--;\\n            // arr[left]\\uAC12\\uC774 \\uD53C\\uBD07\\uBCF4\\uB2E4 \\uD06C\\uB2E4\\uBA74! \\uB610, arr[right]\\uAC12\\uC774 \\uD53C\\uBD07\\uBCF4\\uB2E4 \\uC791\\uB2E4\\uBA74!\\n            // while\\uBB38\\uC744 \\uB098\\uC624\\uAC8C \\uB428 \\uD035\\uC815\\uB82C\\uC758 \\uCCAB\\uBC88\\uC9F8 \\uC21C\\uD658\\uC740\\n            // | \\uAE30\\uC900\\uAC12\\uBCF4\\uB2E4 \\uC791\\uC740 \\uAC12\\uB4E4  |  \\uAE30\\uC900\\uAC12(\\uD53C\\uBD07)  | \\uAE30\\uC900\\uAC12\\uBCF4\\uB2E4 \\uD070 \\uAC12\\uB4E4 |\\n            // \\uC774\\uB807\\uAC8C \\uC815\\uB82C\\uC744 \\uC2DC\\uCF1C\\uC57C \\uD558\\uAE30 \\uB54C\\uBB38\\uC5D0 \\uC67C\\uCABD\\uC5D0 \\uD53C\\uBD07\\uBCF4\\uB2E4 \\uD070 \\uAC12\\uB4E4 \\uD639\\uC740 \\uC624\\uB978\\uCABD\\uC5D0 \\uD53C\\uBD07\\uBCF4\\uB2E4 \\uC791\\uC740 \\uAC12\\uB4E4\\uC774 \\uC788\\uC73C\\uBA74 \\uC11C\\uB85C \\uADF8 \\uAC12\\uC744 \\uAD50\\uD658!\\n            if (left < right) {\\n                int temp = arr[left];\\n                arr[left] = arr[right];\\n                arr[right] = temp;\\n            }\\n        }                   // left\\uB97C \\uBC18\\uD658\\uD558\\uB294 \\uC774\\uC720\\uB294 \\uD035\\uC815\\uB82C\\uC774 1\\uC21C\\uD658\\uC744 \\uB05D\\uB0B4\\uACE0 \\uB098\\uBA74\\n        return left;        // | \\uAE30\\uC900\\uAC12\\uBCF4\\uB2E4 \\uC791\\uC740 \\uAC12\\uB4E4 |  \\uAE30\\uC900\\uAC12(\\uD53C\\uBD07)  | \\uAE30\\uC900\\uAC12\\uBCF4\\uB2E4 \\uD070 \\uAC12\\uB4E4 |\\n                            // \\uC5EC\\uAE30\\uC11C \\uC67C\\uCABD\\uC758 \\uB9C8\\uC9C0\\uB9C9\\uC5D0 \\uC788\\uAC70\\uB098 \\uD639\\uC740 \\uC624\\uB978\\uCABD\\uC758 \\uCCAB\\uBC88\\uC9F8\\uC5D0 \\uC788\\uAE30 \\uB54C\\uBB38\\uC5D0\\n    }                       // left\\uB97C \\uBC18\\uD658\\uD558\\uC5EC \\uC67C\\uCABD\\uC758 \\uB05D\\uC73C\\uB85C \\uC7AC\\uADC0\\uD638\\uCD9C, \\uC624\\uB978\\uCABD\\uC758 \\uCCAB\\uBC88\\uC9F8\\uB85C \\uC7AC\\uADC0\\uD638\\uCD9C\\uC744 \\uD558\\uBA74 \\uB418\\uAE30 \\uB584\\uBB38\\n\\n    public static void quickSort(int arr[], int left, int right) {\\n        // left\\uAC00 right\\uBCF4\\uB2E4 \\uC791\\uB2E4\\uBA74 \\uC815\\uB82C\\uC774 \\uB05D\\uB098\\uC9C0 \\uC54A\\uC740 \\uC0C1\\uD669\\uC774\\uAE30 \\uB584\\uBB38\\n        if (left < right) {\\n            // \\uD30C\\uD2F0\\uC158 \\uBA54\\uC18C\\uB4DC\\uB97C \\uD638\\uCD9C\\uD588\\uC73C\\uB2C8 | \\uAE30\\uC900\\uAC12\\uBCF4\\uB2E4 \\uC791\\uC740 \\uAC12\\uB4E4 |  \\uAE30\\uC900\\uAC12(\\uD53C\\uBD07)  | \\uAE30\\uC900\\uAC12\\uBCF4\\uB2E4 \\uD070 \\uAC12\\uB4E4 | \\uB85C \\uC815\\uB82C\\uB428\\n            int pivotNewIndex = partition(arr, left, right);\\n            quickSort(arr, left, pivotNewIndex - 1);    // \\uC7AC\\uADC0 \\uD638\\uCD9C\\uB97C \\uD1B5\\uD574 \\uC67C\\uCABD\\uC5D0 \\uC788\\uB294 \\uAC83\\uB4E4\\uC744 \\uB2E4\\uC2DC \\uC815\\uB82C\\n            quickSort(arr, pivotNewIndex + 1, right);   // \\uC7AC\\uADC0 \\uD638\\uCD9C\\uC744 \\uD1B5\\uD574 \\uC624\\uB978\\uCABD\\uC5D0 \\uC788\\uB294 \\uAC83\\uB4E4\\uC744 \\uB2E4\\uC2DC \\uC815\\uB82C\\n        }\\n    }\\n    public static void main(String[] args) {\\n        int data[] = { 66, 10, 1, 34, 5, -10 };\\n        quickSort(data, 0, data.length - 1);\\n        for (int i = 0; i < data.length; i++) {\\n            System.out.println(\\\"data[\\\" + i + \\\"] : \\\" + data[i]);\\n        }\\n    }\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#퀵-정렬-quick-sort","title":"퀵 정렬 (Quick Sort)"}]},"parent":{"__typename":"File","relativePath":"codeblock/algorithm/QuickSort.md"},"frontmatter":{"metaTitle":"Sn-Hn (퀵 정렬)","metaDescription":"This is the meta description for this page"}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/introduction","title":"소개"}}},{"node":{"fields":{"slug":"/","title":"Sn-Hn 블로그"}}},{"node":{"fields":{"slug":"/codeblock/algorithm/InsectionSort","title":"정렬 - 삽입 정렬"}}},{"node":{"fields":{"slug":"/codeblock/algorithm/BubbleSort","title":"정렬 - 버블 정렬"}}},{"node":{"fields":{"slug":"/codeblock/algorithm/QuickSort","title":"정렬 - 퀵 정렬"}}},{"node":{"fields":{"slug":"/codeblock/algorithm/MergeSort","title":"정렬 - 병합 정렬"}}},{"node":{"fields":{"slug":"/project","title":"프로젝트"}}},{"node":{"fields":{"slug":"/codeblock/programmers/124나라의 숫자","title":"프로그래머스 - 124 나라의 숫자"}}},{"node":{"fields":{"slug":"/codeblock/programmers/멀쩡한 사각형","title":"프로그래머스 - [Summer/Winter Coding(2019)] 멀쩡한 사각형"}}},{"node":{"fields":{"slug":"/codeblock/programmers/완주하지 못한 선수","title":"프로그래머스 - 완주하지 못한 선수"}}},{"node":{"fields":{"slug":"/codeblock/programmers/키패드 누르기","title":"프로그래머스 - [카카오 인턴] 키패드 누르기"}}},{"node":{"fields":{"slug":"/codeblock/programmers","title":"프로그래머스"}}},{"node":{"fields":{"slug":"/codeblock/algorithm","title":"알고리즘"}}},{"node":{"fields":{"slug":"/codeblock/backjoon","title":"백준"}}},{"node":{"fields":{"slug":"/codeblock","title":"알고리즘"}}},{"node":{"fields":{"slug":"/book","title":"책"}}},{"node":{"fields":{"slug":"/blog","title":"블로그"}}},{"node":{"fields":{"slug":"/cs","title":"CS"}}}]}},"pageContext":{"id":"486b56a5-f884-595f-bcb9-5e753c6bddf7"}},"staticQueryHashes":["2619113677","2619113677","3706406642","3706406642","417421954","417421954"]}